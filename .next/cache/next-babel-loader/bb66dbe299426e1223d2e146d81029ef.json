{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Dropdown, Input, Button, Message } from 'semantic-ui-react';\nlet actSetList = [{\n  key: 'Activity Set 1',\n  text: 'Activity Set 1',\n  value: 'Activity Set 1',\n  activities: []\n}, {\n  key: 'Activity Set 2',\n  text: 'Activity Set 2',\n  value: 'Activity Set 2',\n  activities: []\n}];\nexport default class CreateList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      actList: '',\n      title: ''\n    });\n\n    _defineProperty(this, \"handleAddition\", (e, {\n      value\n    }) => actSetList.push({\n      key: value,\n      text: value,\n      value\n    }));\n\n    _defineProperty(this, \"handleChange\", (e, {\n      value\n    }) => {\n      this.setState({\n        actList: value\n      });\n      this.inputRef.current.defaultValue = this.state.actList;\n    });\n\n    _defineProperty(this, \"handleInputChange\", (e, {\n      value\n    }) => this.setState({\n      title: value\n    }));\n\n    _defineProperty(this, \"handleEdit\", () => console.log(actSetList.map(function (e) {\n      return e.key;\n    }).indexOf(this.state.title)));\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(\"h2\", {\n      style: {\n        textAlign: 'right'\n      }\n    }, \"Saved Activity Sets\")), __jsx(Grid.Column, {\n      width: 5\n    }, __jsx(Dropdown, {\n      placeholder: \"Activity Set\",\n      search: true,\n      selection: true,\n      options: actSetList,\n      allowAdditions: true,\n      additionLabel: \"New Activity Set: \",\n      onAddItem: this.handleAddition,\n      onChange: this.handleChange\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      textAlign: \"center\"\n    }, __jsx(Input, {\n      action: {\n        color: 'blue',\n        content: 'Edit Title',\n        onClick: () => this.handleEdit()\n      },\n      ref: this.inputRef,\n      size: \"large\",\n      placeholder: \"Title\",\n      defaultValue: this.state.actList,\n      onChange: this.handleInputChange\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/edit/index.js"],"names":["React","Component","Layout","Grid","Dropdown","Input","Button","Message","actSetList","key","text","value","activities","CreateList","actList","title","e","push","setState","inputRef","current","defaultValue","state","console","log","map","indexOf","render","textAlign","handleAddition","handleChange","color","content","onClick","handleEdit","handleInputChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Grid, Dropdown, Input, Button, Message} from 'semantic-ui-react';\r\n\r\nlet actSetList = [\r\n  {\r\n    key: 'Activity Set 1',\r\n    text: 'Activity Set 1',\r\n    value: 'Activity Set 1',\r\n    activities: []\r\n  },\r\n  {\r\n    key: 'Activity Set 2',\r\n    text: 'Activity Set 2',\r\n    value: 'Activity Set 2',\r\n    activities: []\r\n  }\r\n];\r\n\r\nexport default class CreateList extends Component {\r\n  state={\r\n    actList: '',\r\n    title: ''\r\n  };\r\n\r\n// Adds activity list into data\r\n  handleAddition = (e, {value}) => actSetList.push({key: value, text: value, value});\r\n\r\n// Changes title display to match current value\r\n  handleChange = (e, {value}) => {\r\n    this.setState({actList: value});\r\n    this.inputRef.current.defaultValue = this.state.actList;  \r\n  }\r\n\r\n// Keeps track of title for future use\r\n  handleInputChange = (e, {value}) => this.setState({title: value});\r\n\r\n// Edits the title of the active activity list\r\n  handleEdit = () => console.log(actSetList.map(function(e) {\r\n    return e.key;\r\n  }).indexOf(this.state.title));\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign: 'right'}}>Saved Activity Sets</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown\r\n                placeholder='Activity Set'\r\n                search\r\n                selection\r\n                options={actSetList}\r\n                allowAdditions\r\n                additionLabel='New Activity Set: '\r\n                onAddItem={this.handleAddition}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column textAlign='center'>\r\n              <Input\r\n                action={{\r\n                  color: 'blue',\r\n                  content: 'Edit Title',\r\n                  onClick: () => this.handleEdit()\r\n                }}\r\n                ref={this.inputRef}\r\n                size='large'\r\n                placeholder='Title'\r\n                defaultValue={this.state.actList}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}