{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Dropdown, Grid, Button, Header, Message } from 'semantic-ui-react';\nvar actSetList = [];\n\nfunction getOptions() {\n  actSetList.length = 0;\n\n  for (var i in window.localStorage) {\n    if (window.localStorage.getItem(i) && i !== \"ally-supports-cache\") {\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\n    }\n  }\n}\n\nvar MainMenu = /*#__PURE__*/function (_Component) {\n  _inherits(MainMenu, _Component);\n\n  var _super = _createSuper(MainMenu);\n\n  function MainMenu() {\n    var _this;\n\n    _classCallCheck(this, MainMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      title: '',\n      activity: 'Test activity'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, _ref) {\n      var value = _ref.value;\n      return _this.setState({\n        title: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      var activities = JSON.parse(window.localStorage.getItem(_this.state.title)).activities;\n    });\n\n    return _this;\n  }\n\n  _createClass(MainMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      getOptions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, \"Choose Activity Set\")), __jsx(Grid.Column, {\n        width: 5\n      }, __jsx(Dropdown, {\n        placeholder: \"Activity Set\",\n        search: true,\n        selection: true,\n        options: actSetList,\n        onChange: this.handleChange,\n        value: this.state.title\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 10,\n        verticalAlign: \"middle\"\n      }, __jsx(Header, {\n        size: \"huge\"\n      }, \"My break will now be...\")), __jsx(Grid.Column, {\n        width: 6\n      }, __jsx(Button, {\n        size: \"massive\",\n        primary: true,\n        floated: \"right\",\n        content: \"Break Time!\",\n        onClick: this.handleClick\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Message, {\n        positive: true,\n        content: this.state.activity,\n        hidden: !this.state.activity\n      })))));\n    }\n  }]);\n\n  return MainMenu;\n}(Component);\n\nexport { MainMenu as default };","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/main/index.js"],"names":["React","Component","Layout","Dropdown","Grid","Button","Header","Message","actSetList","getOptions","length","i","window","localStorage","getItem","push","JSON","parse","MainMenu","title","activity","e","value","setState","activities","state","textAlign","handleChange","handleClick"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,OAAxC,QAAsD,mBAAtD;AAEA,IAAIC,UAAU,GAAG,EAAjB;;AACA,SAASC,UAAT,GAAsB;AACpBD,EAAAA,UAAU,CAACE,MAAX,GAAoB,CAApB;;AACA,OAAK,IAAMC,CAAX,IAAgBC,MAAM,CAACC,YAAvB,EAAqC;AACnC,QAAID,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,CAA5B,KAAkCA,CAAC,KAAK,qBAA5C,EAAmE;AACjEH,MAAAA,UAAU,CAACO,IAAX,CAAgBC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,CAA5B,CAAX,CAAhB;AACD;AACF;AACF;;IAEoBO,Q;;;;;;;;;;;;;;;;4DAKX;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;mEAMO,UAACC,CAAD;AAAA,UAAKC,KAAL,QAAKA,KAAL;AAAA,aAAgB,MAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEG;AAAR,OAAd,CAAhB;AAAA,K;;kEAED,YAAM;AAClB,UAAIE,UAAU,GAAGR,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAAKW,KAAL,CAAWN,KAAvC,CAAX,EAA0DK,UAA3E;AACD,K;;;;;;;wCAdmB;AAClBf,MAAAA,UAAU;AACX;;;6BAcQ;AACP,aACE,MAAC,MAAD,QACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE;AAAI,QAAA,KAAK,EAAE;AAACiB,UAAAA,SAAS,EAAC;AAAX;AAAX,+BADF,CADF,EAIE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,QAAD;AACA,QAAA,WAAW,EAAC,cADZ;AAEA,QAAA,MAAM,MAFN;AAGA,QAAA,SAAS,MAHT;AAIA,QAAA,OAAO,EAAElB,UAJT;AAKA,QAAA,QAAQ,EAAE,KAAKmB,YALf;AAMA,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWN;AANlB,QADF,CAJF,CADF,EAgBE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AACE,QAAA,KAAK,EAAE,EADT;AAEE,QAAA,aAAa,EAAC;AAFhB,SAIE,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC;AAAb,mCAJF,CADF,EAOE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,MAAD;AACA,QAAA,IAAI,EAAC,SADL;AAEA,QAAA,OAAO,MAFP;AAGA,QAAA,OAAO,EAAC,OAHR;AAIA,QAAA,OAAO,EAAC,aAJR;AAKA,QAAA,OAAO,EAAE,KAAKS;AALd,QADF,CAPF,CAhBF,EAiCE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,OAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWL,QAFtB;AAGE,QAAA,MAAM,EAAE,CAAC,KAAKK,KAAL,CAAWL;AAHtB,QADF,CADF,CAjCF,CADF,CADF;AA+CD;;;;EAjEmCnB,S;;SAAjBiB,Q","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Dropdown, Grid, Button, Header, Message} from 'semantic-ui-react';\r\n\r\nlet actSetList = [];\r\nfunction getOptions() {\r\n  actSetList.length = 0;\r\n  for (const i in window.localStorage) {\r\n    if (window.localStorage.getItem(i) && i !== \"ally-supports-cache\") {\r\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\r\n    }\r\n  }\r\n}\r\n\r\nexport default class MainMenu extends Component {\r\n  componentDidMount() {\r\n    getOptions();\r\n  }\r\n\r\n  state = {\r\n    title: '',\r\n    activity: 'Test activity'\r\n  }\r\n\r\n// Changes title display to match current value and keeps track of true title\r\n  handleChange = (e, {value}) => this.setState({title: value});\r\n\r\n  handleClick = () => {\r\n    let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign:'right'}}>Choose Activity Set</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown\r\n              placeholder='Activity Set'\r\n              search\r\n              selection\r\n              options={actSetList}\r\n              onChange={this.handleChange}\r\n              value={this.state.title}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column\r\n              width={10}\r\n              verticalAlign='middle'\r\n            >\r\n              <Header size='huge'>My break will now be...</Header>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n              <Button\r\n              size='massive'\r\n              primary\r\n              floated='right'\r\n              content='Break Time!'\r\n              onClick={this.handleClick}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Message\r\n                positive\r\n                content={this.state.activity}\r\n                hidden={!this.state.activity}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}