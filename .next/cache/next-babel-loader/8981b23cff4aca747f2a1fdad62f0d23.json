{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Dropdown, Input, Button, Message, Popup, TransitionablePortal, Segment, Header } from 'semantic-ui-react';\nlet actSetList = [];\n\nfunction getOptions() {\n  actSetList.length = 0;\n\n  for (const i in window.localStorage) {\n    if (window.localStorage.getItem(i) && i !== \"ally-supports-cache\") {\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\n    }\n  }\n}\n\nexport default class CreateList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      actList: '',\n      title: '',\n      tempName: '',\n      aOpen: false,\n      nOpen: false\n    });\n\n    _defineProperty(this, \"handleAddition\", (e, {\n      value\n    }) => {\n      window.localStorage.setItem(value, JSON.stringify({\n        key: value,\n        text: value,\n        value,\n        activities: []\n      }));\n      getOptions();\n    });\n\n    _defineProperty(this, \"handleChange\", (e, {\n      value\n    }) => this.setState({\n      actList: value,\n      title: value\n    }));\n\n    _defineProperty(this, \"handleInputChange\", (e, {\n      value\n    }) => this.setState({\n      actList: value\n    }));\n\n    _defineProperty(this, \"handleDelete\", () => {\n      window.localStorage.removeItem(this.state.title);\n      this.setState({\n        actList: '',\n        title: ''\n      });\n      getOptions();\n    });\n\n    _defineProperty(this, \"handleAntidelete\", () => {\n      if (this.state.actList) {\n        return __jsx(Button, {\n          negative: true,\n          content: \"Comfirm Delete\",\n          onClick: this.handleDelete\n        });\n      } else {\n        return __jsx(Message, {\n          negative: true,\n          content: \"You cannot delete nothing!\"\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleEdit\", () => {\n      if (this.state.title) {\n        const activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\n        window.localStorage.removeItem(this.state.title);\n        window.localStorage.setItem(this.state.actList, JSON.stringify({\n          key: this.state.actList,\n          text: this.state.actList,\n          value: this.state.actList,\n          activities\n        }));\n        this.setState({\n          title: this.state.actList\n        });\n        this.setState({\n          aOpen: true\n        });\n        getOptions();\n      }\n    });\n\n    _defineProperty(this, \"handleActChange\", (e, {\n      value\n    }) => this.setState({\n      tempName: value\n    }));\n\n    _defineProperty(this, \"handleAdd\", () => {\n      if (this.state.tempName) {\n        let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\n        activities.push({\n          key: this.state.tempName,\n          weight: 1\n        });\n        window.localStorage.setItem(this.state.title, JSON.stringify({\n          key: this.state.title,\n          text: this.state.title,\n          value: this.state.title,\n          activities\n        }));\n        this.setState({\n          tempName: ''\n        });\n        getOptions();\n      }\n    });\n\n    _defineProperty(this, \"handleRemove\", e => {\n      let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\n      const removed = e.currentTarget.parentNode.parentNode.getAttribute('class').replace('row ', '');\n      activities.splice(activities.map(function (e) {\n        return e.key;\n      }).indexOf(removed), 1);\n      window.localStorage.setItem(this.state.title, JSON.stringify({\n        key: this.state.title,\n        text: this.state.title,\n        value: this.state.title,\n        activities\n      }));\n      this.setState({\n        tempName: this.state.tempName\n      });\n      getOptions();\n    });\n\n    _defineProperty(this, \"handleModify\", e => {\n      if (e.currentTarget.parentNode.querySelector('input').value) {\n        let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\n        const newName = e.currentTarget.parentNode.querySelector('input').value;\n        const oldName = e.currentTarget.parentNode.querySelector('input').getAttribute('value');\n        activities[activities.map(function (e) {\n          return e.key;\n        }).indexOf(oldName)].key = newName;\n        window.localStorage.setItem(this.state.title, JSON.stringify({\n          key: this.state.title,\n          text: this.state.title,\n          value: this.state.title,\n          activities\n        }));\n        this.setState({\n          nOpen: true\n        });\n        getOptions();\n      }\n    });\n\n    _defineProperty(this, \"handleIncrement\", () => {});\n\n    _defineProperty(this, \"handleDecrement\", () => {});\n\n    _defineProperty(this, \"handleAClose\", () => this.setState({\n      aOpen: false\n    }));\n\n    _defineProperty(this, \"handleNClose\", () => this.setState({\n      nOpen: false\n    }));\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', getOptions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', getOptions);\n  }\n\n  renderActivities() {\n    if (this.state.title) {\n      if (window.localStorage.getItem(this.state.title)) {\n        return JSON.parse(window.localStorage.getItem(this.state.title)).activities.map(activity => {\n          return __jsx(Grid.Row, {\n            key: activity.key,\n            className: activity.key\n          }, __jsx(Grid.Column, {\n            width: 2,\n            textAlign: \"right\",\n            verticalAlign: \"middle\"\n          }, __jsx(Button, {\n            circular: true,\n            negative: true,\n            icon: \"minus\",\n            size: \"medium\",\n            onClick: this.handleRemove\n          })), __jsx(Grid.Column, {\n            width: 9\n          }, __jsx(Input, {\n            action: {\n              color: 'blue',\n              content: 'Edit Name',\n              onClick: this.handleModify\n            },\n            size: \"small\",\n            fluid: true,\n            defaultValue: activity.key\n          })), __jsx(Grid.Column, {\n            width: 2,\n            textAlign: \"right\",\n            verticalAlign: \"middle\"\n          }, __jsx(Button, {\n            circular: true,\n            negative: true,\n            icon: \"minus\",\n            size: \"mini\",\n            onClick: this.handleDecrement\n          })), __jsx(Grid.Column, {\n            width: 1,\n            textAlign: \"center\",\n            verticalAlign: \"middle\"\n          }, __jsx(\"h2\", null, activity.weight)), __jsx(Grid.Column, {\n            width: 2,\n            verticalAlign: \"middle\"\n          }, __jsx(Button, {\n            circular: true,\n            positive: true,\n            icon: \"plus\",\n            size: \"mini\",\n            onClick: this.handleIncrement\n          })));\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(\"h2\", {\n      style: {\n        textAlign: 'right'\n      }\n    }, \"Saved Activity Sets\")), __jsx(Grid.Column, {\n      width: 5\n    }, __jsx(Dropdown, {\n      placeholder: \"Activity Set\",\n      search: true,\n      selection: true,\n      options: actSetList,\n      allowAdditions: true,\n      additionLabel: \"New Activity Set: \",\n      onAddItem: this.handleAddition,\n      onChange: this.handleChange,\n      value: this.state.title\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      textAlign: \"center\"\n    }, __jsx(Popup, {\n      trigger: __jsx(Input, {\n        size: \"large\",\n        placeholder: \"Title\",\n        value: this.state.actList,\n        onChange: this.handleInputChange,\n        action: true\n      }, __jsx(Popup, {\n        trigger: __jsx(Button, {\n          negative: true,\n          icon: \"minus\",\n          size: \"large\"\n        }),\n        content: this.handleAntidelete,\n        on: \"click\",\n        position: \"top center\"\n      }), __jsx(\"input\", null), __jsx(Button, {\n        color: \"blue\",\n        content: \"Edit Title\",\n        onClick: this.handleEdit,\n        disabled: !this.state.actList\n      })),\n      content: __jsx(Message, {\n        negative: true,\n        content: \"You cannot name an activity set nothing!\"\n      }),\n      position: \"top center\",\n      disabled: !!this.state.actList\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 2\n    }), __jsx(Grid.Column, {\n      width: 9,\n      textAlign: \"center\",\n      verticalAlign: \"bottom\"\n    }, __jsx(Message, {\n      color: \"blue\",\n      header: \"Activity Name\",\n      content: \"Name of your break activity.\"\n    })), __jsx(Grid.Column, {\n      width: 5,\n      textAlign: \"center\"\n    }, __jsx(Message, {\n      color: \"red\",\n      header: \"Weight\",\n      content: \"How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.\"\n    }))), this.renderActivities(), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 2,\n      textAlign: \"right\",\n      verticalAlign: \"middle\"\n    }, __jsx(Button, {\n      circular: true,\n      positive: true,\n      icon: \"plus\",\n      size: \"medium\",\n      onClick: this.handleAdd\n    })), __jsx(Grid.Column, {\n      width: 9\n    }, __jsx(Input, {\n      size: \"small\",\n      placeholder: \"Name\",\n      fluid: true,\n      value: this.state.tempName,\n      onChange: this.handleActChange\n    })))), __jsx(TransitionablePortal, {\n      onClose: this.handleAClose,\n      open: this.state.aOpen\n    }, __jsx(Segment, {\n      textAlign: \"center\",\n      vertical: true,\n      inverted: true,\n      color: \"green\",\n      secondary: true,\n      style: {\n        left: '30%',\n        right: '30%',\n        minWidth: '370px',\n        top: '45%',\n        bottom: '45%',\n        minHieght: '30px',\n        maxHeight: '45px',\n        position: 'fixed',\n        zIndex: 1000\n      }\n    }, __jsx(Header, null, \"Activity set title was changed successfully.\"))), __jsx(TransitionablePortal, {\n      onClose: this.handleNClose,\n      open: this.state.nOpen\n    }, __jsx(Segment, {\n      textAlign: \"center\",\n      vertical: true,\n      inverted: true,\n      color: \"green\",\n      tertiary: true,\n      style: {\n        left: '30%',\n        right: '30%',\n        minWidth: '350px',\n        top: '45%',\n        bottom: '45%',\n        minHieght: '30px',\n        maxHeight: '45px',\n        position: 'fixed',\n        zIndex: 1000\n      }\n    }, __jsx(Header, null, \"Activity name was changed successfully.\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/edit/index.js"],"names":["React","Component","Layout","Grid","Dropdown","Input","Button","Message","Popup","TransitionablePortal","Segment","Header","actSetList","getOptions","length","i","window","localStorage","getItem","push","JSON","parse","CreateList","actList","title","tempName","aOpen","nOpen","e","value","setItem","stringify","key","text","activities","setState","removeItem","state","handleDelete","weight","removed","currentTarget","parentNode","getAttribute","replace","splice","map","indexOf","querySelector","newName","oldName","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","renderActivities","activity","handleRemove","color","content","onClick","handleModify","handleDecrement","handleIncrement","render","textAlign","handleAddition","handleChange","handleInputChange","handleAntidelete","handleEdit","handleAdd","handleActChange","handleAClose","left","right","minWidth","top","bottom","minHieght","maxHeight","position","zIndex","handleNClose"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Grid, Dropdown, Input, Button, Message, Popup, TransitionablePortal, Segment, Header} from 'semantic-ui-react';\r\n\r\nlet actSetList = [];\r\nfunction getOptions() {\r\n  actSetList.length = 0;\r\n  for (const i in window.localStorage) {\r\n    if (window.localStorage.getItem(i) && i !== \"ally-supports-cache\") {\r\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\r\n    }\r\n  }\r\n}\r\n\r\nexport default class CreateList extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('load', getOptions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('load', getOptions)\r\n  }\r\n\r\n  state={\r\n    actList: '',\r\n    title: '',\r\n    tempName: '',\r\n    aOpen: false,\r\n    nOpen: false\r\n  };\r\n\r\n// Adds activity list into local storage\r\n  handleAddition = (e, {value}) => {\r\n    window.localStorage.setItem(value, JSON.stringify({key: value, text: value, value, activities: []}));\r\n    getOptions();\r\n  }\r\n\r\n// Changes title display to match current value and keeps track of true title\r\n  handleChange = (e, {value}) => this.setState({actList: value, title: value});\r\n\r\n// Allows changes in activity list input field\r\n  handleInputChange = (e, {value}) => this.setState({actList: value});\r\n\r\n// Deletes the activity list\r\n  handleDelete = () => {\r\n    window.localStorage.removeItem(this.state.title);\r\n    this.setState({actList: '', title: ''});\r\n    getOptions();\r\n  };\r\n\r\n// Ensures no accidental deletion of activity list\r\n  handleAntidelete = () => {\r\n    if (this.state.actList) {\r\n      return(\r\n        <Button\r\n          negative\r\n          content='Comfirm Delete'\r\n          onClick={this.handleDelete}\r\n        />\r\n      );\r\n    } else {\r\n      return(\r\n        <Message\r\n          negative\r\n          content='You cannot delete nothing!'\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n// Edits the title of the active activity list\r\n  handleEdit = () => {\r\n    if (this.state.title) {\r\n      const activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      window.localStorage.removeItem(this.state.title);\r\n      window.localStorage.setItem(this.state.actList, JSON.stringify({key: this.state.actList, text: this.state.actList, value: this.state.actList, activities}));\r\n      this.setState({title: this.state.actList});\r\n      this.setState({aOpen: true});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Allows changes in activity input field\r\n  handleActChange = (e, {value}) => this.setState({tempName: value});\r\n\r\n// Adds an activity to the activity list\r\n  handleAdd = () => {\r\n    if (this.state.tempName) {\r\n      let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      activities.push({key: this.state.tempName, weight: 1});\r\n      window.localStorage.setItem(this.state.title, JSON.stringify({key: this.state.title, text: this.state.title, value: this.state.title, activities}));\r\n      this.setState({tempName: ''});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Removes an activity from the activity list\r\n  handleRemove = (e) => {\r\n    let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n    const removed = e.currentTarget.parentNode.parentNode.getAttribute('class').replace('row ', '');\r\n    activities.splice(activities.map(function(e) { return e.key; }).indexOf(removed), 1);\r\n    window.localStorage.setItem(this.state.title, JSON.stringify({key: this.state.title, text: this.state.title, value: this.state.title, activities}));\r\n    this.setState({tempName: this.state.tempName});\r\n    getOptions();\r\n  };\r\n\r\n// Modifies the name of an activity\r\n  handleModify = (e) => {\r\n    if (e.currentTarget.parentNode.querySelector('input').value) {\r\n      let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      const newName = e.currentTarget.parentNode.querySelector('input').value;\r\n      const oldName = e.currentTarget.parentNode.querySelector('input').getAttribute('value');\r\n      activities[activities.map(function(e) { return e.key; }).indexOf(oldName)].key = newName;\r\n      window.localStorage.setItem(this.state.title, JSON.stringify({key: this.state.title, text: this.state.title, value: this.state.title, activities}));\r\n      this.setState({nOpen: true});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Increments the weight of an activity\r\n  handleIncrement = () => {\r\n\r\n  };\r\n\r\n// Decrements the weight of an activity\r\n  handleDecrement = () => {\r\n\r\n  };\r\n\r\n// Closes portal for activity list title change confirmation\r\n  handleAClose = () => this.setState({aOpen: false});\r\n\r\n// Closes portal for activity name change confirmation\r\n  handleNClose = () => this.setState({nOpen: false});\r\n\r\n  renderActivities() {\r\n    if (this.state.title) {\r\n      if (window.localStorage.getItem(this.state.title)) {\r\n        return (\r\n          JSON.parse(window.localStorage.getItem(this.state.title)).activities.map(activity => {\r\n            return(\r\n              <Grid.Row\r\n                key={activity.key}\r\n                className={activity.key}\r\n              >\r\n                <Grid.Column\r\n                  width={2}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    negative\r\n                    icon='minus'\r\n                    size='medium'\r\n                    onClick={this.handleRemove}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={9}>\r\n                  <Input\r\n                    action={{\r\n                      color: 'blue',\r\n                      content: 'Edit Name',\r\n                      onClick: this.handleModify\r\n                    }}\r\n                    size='small'\r\n                    fluid\r\n                    defaultValue={activity.key}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={2}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    negative\r\n                    icon='minus'\r\n                    size='mini'\r\n                    onClick={this.handleDecrement}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={1}\r\n                  textAlign='center'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <h2>{activity.weight}</h2>\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={2}\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    positive\r\n                    icon='plus'\r\n                    size='mini'\r\n                    onClick={this.handleIncrement}\r\n                  />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            );\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign: 'right'}}>Saved Activity Sets</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown\r\n                placeholder='Activity Set'\r\n                search\r\n                selection\r\n                options={actSetList}\r\n                allowAdditions\r\n                additionLabel='New Activity Set: '\r\n                onAddItem={this.handleAddition}\r\n                onChange={this.handleChange}\r\n                value={this.state.title}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column textAlign='center'>\r\n              <Popup\r\n                trigger={\r\n                  <Input\r\n                    size='large'\r\n                    placeholder='Title'\r\n                    value={this.state.actList}\r\n                    onChange={this.handleInputChange}\r\n                    action\r\n                  >\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          negative\r\n                          icon='minus'\r\n                          size='large'\r\n                        />\r\n                      }\r\n                      content={this.handleAntidelete}\r\n                      on='click'\r\n                      position='top center'\r\n                    />\r\n                    <input />\r\n                    <Button\r\n                      color='blue'\r\n                      content='Edit Title'\r\n                      onClick={this.handleEdit}\r\n                      disabled={!this.state.actList}\r\n                    />\r\n                  </Input>\r\n                }\r\n                content={\r\n                  <Message\r\n                    negative\r\n                    content='You cannot name an activity set nothing!'\r\n                  />\r\n                }\r\n                position='top center'\r\n                disabled={!!this.state.actList}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}></Grid.Column>\r\n            <Grid.Column\r\n              width={9}\r\n              textAlign='center'\r\n              verticalAlign='bottom'\r\n            >\r\n              <Message\r\n                color='blue'\r\n                header='Activity Name'\r\n                content='Name of your break activity.'\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column\r\n              width={5}\r\n              textAlign='center'\r\n            >\r\n              <Message\r\n                color='red'\r\n                header='Weight'\r\n                content='How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.'\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          {this.renderActivities()}\r\n          <Grid.Row>\r\n            <Grid.Column\r\n              width={2}\r\n              textAlign='right'\r\n              verticalAlign='middle'\r\n            >\r\n              <Button\r\n                circular\r\n                positive\r\n                icon='plus'\r\n                size='medium'\r\n                onClick={this.handleAdd}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={9}>\r\n              <Input\r\n                size='small'\r\n                placeholder='Name'\r\n                fluid\r\n                value={this.state.tempName}\r\n                onChange={this.handleActChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <TransitionablePortal\r\n          onClose={this.handleAClose}\r\n          open={this.state.aOpen}\r\n        >\r\n          <Segment\r\n            textAlign='center'\r\n            vertical\r\n            inverted\r\n            color='green'\r\n            secondary\r\n            style={{\r\n              left: '30%',\r\n              right: '30%',\r\n              minWidth: '370px',\r\n              top: '45%',\r\n              bottom: '45%',\r\n              minHieght: '30px',\r\n              maxHeight: '45px',\r\n              position: 'fixed',\r\n              zIndex: 1000\r\n            }}\r\n          >\r\n            <Header>Activity set title was changed successfully.</Header>\r\n          </Segment>\r\n        </TransitionablePortal>\r\n        <TransitionablePortal\r\n          onClose={this.handleNClose}\r\n          open={this.state.nOpen}\r\n        >\r\n          <Segment\r\n            textAlign='center'\r\n            vertical\r\n            inverted\r\n            color='green'\r\n            tertiary\r\n            style={{\r\n              left: '30%',\r\n              right: '30%',\r\n              minWidth: '350px',\r\n              top: '45%',\r\n              bottom: '45%',\r\n              minHieght: '30px',\r\n              maxHeight: '45px',\r\n              position: 'fixed',\r\n              zIndex: 1000\r\n            }}\r\n          >\r\n            <Header>Activity name was changed successfully.</Header>\r\n          </Segment>\r\n        </TransitionablePortal>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}