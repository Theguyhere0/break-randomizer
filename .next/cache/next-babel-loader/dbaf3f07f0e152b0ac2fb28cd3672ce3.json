{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Dropdown, Input, Button, Message } from 'semantic-ui-react';\nvar actSetList = [{\n  key: 'Activity Set 1',\n  text: 'Activity Set 1',\n  value: 'Activity Set 1',\n  activities: [{\n    name: 'Reading',\n    weight: 2\n  }, {\n    name: 'Writing',\n    weight: 5\n  }]\n}, {\n  key: 'Activity Set 2',\n  text: 'Activity Set 2',\n  value: 'Activity Set 2',\n  activities: [{\n    name: 'Running',\n    weight: 3\n  }, {\n    name: 'Biking',\n    weight: 1\n  }]\n}];\n\nvar CreateList = /*#__PURE__*/function (_Component) {\n  _inherits(CreateList, _Component);\n\n  var _super = _createSuper(CreateList);\n\n  function CreateList() {\n    var _this;\n\n    _classCallCheck(this, CreateList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      actList: '',\n      title: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddition\", function (e, _ref) {\n      var value = _ref.value;\n      return actSetList.push({\n        key: value,\n        text: value,\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, _ref2) {\n      var value = _ref2.value;\n      return _this.setState({\n        actList: value,\n        title: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (e, _ref3) {\n      var value = _ref3.value;\n      return _this.setState({\n        actList: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDelete\", function () {\n      var index = actSetList.map(function (e) {\n        return e.key;\n      }).indexOf(_this.state.title);\n      actSetList.splice(index, 1);\n\n      _this.setState({\n        actList: '',\n        title: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEdit\", function () {\n      var index = actSetList.map(function (e) {\n        return e.key;\n      }).indexOf(_this.state.title);\n      actSetList[index].key = _this.state.actList;\n      actSetList[index].text = _this.state.actList;\n      actSetList[index].value = _this.state.actList;\n\n      _this.setState({\n        title: _this.state.actList\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAdd\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRemove\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleModify\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIncrement\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDecrement\", function () {});\n\n    return _this;\n  }\n\n  _createClass(CreateList, [{\n    key: \"renderActivities\",\n    value: function renderActivities() {\n      return __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 2,\n        textAlign: \"right\",\n        verticalAlign: \"middle\"\n      }, __jsx(Button, {\n        circular: true,\n        negative: true,\n        icon: \"minus\",\n        size: \"medium\",\n        onClick: this.handleRemove\n      })), __jsx(Grid.Column, {\n        width: 9\n      }, __jsx(Input, {\n        action: {\n          color: 'blue',\n          content: 'Edit Name',\n          onClick: this.handleModify\n        },\n        size: \"small\",\n        fluid: true\n      })), __jsx(Grid.Column, {\n        width: 1\n      }, __jsx(Button, {\n        circular: true,\n        negative: true,\n        icon: \"minus\",\n        size: \"mini\",\n        onClick: this.handleDecrement\n      })), __jsx(Grid.Column, {\n        width: 3\n      }), __jsx(Grid.Column, {\n        width: 1\n      }, __jsx(Button, {\n        circular: true,\n        positive: true,\n        icon: \"plus\",\n        size: \"mini\",\n        onClick: this.handleIncrement\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, \"Saved Activity Sets\")), __jsx(Grid.Column, {\n        width: 5\n      }, __jsx(Dropdown, {\n        placeholder: \"Activity Set\",\n        search: true,\n        selection: true,\n        options: actSetList,\n        allowAdditions: true,\n        additionLabel: \"New Activity Set: \",\n        onAddItem: this.handleAddition,\n        onChange: this.handleChange,\n        value: this.state.title\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        textAlign: \"center\"\n      }, __jsx(Button, {\n        negative: true,\n        icon: \"minus\",\n        size: \"large\",\n        onClick: this.handleDelete\n      }), __jsx(Input, {\n        action: {\n          color: 'blue',\n          content: 'Edit Title',\n          onClick: function onClick() {\n            return _this2.handleEdit();\n          }\n        },\n        size: \"large\",\n        placeholder: \"Title\",\n        value: this.state.actList,\n        onChange: this.handleInputChange\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 2\n      }), __jsx(Grid.Column, {\n        width: 9,\n        textAlign: \"center\",\n        verticalAlign: \"bottom\"\n      }, __jsx(Message, {\n        color: \"blue\",\n        header: \"Activity Name\",\n        content: \"Name of your break activity.\"\n      })), __jsx(Grid.Column, {\n        width: 5,\n        textAlign: \"center\"\n      }, __jsx(Message, {\n        color: \"red\",\n        header: \"Weight\",\n        content: \"How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.\"\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 2,\n        textAlign: \"right\",\n        verticalAlign: \"middle\"\n      }, __jsx(Button, {\n        circular: true,\n        positive: true,\n        icon: \"plus\",\n        size: \"medium\",\n        onClick: this.handleAdd\n      })), __jsx(Grid.Column, {\n        width: 9\n      }, __jsx(Input, {\n        size: \"small\",\n        placeholder: \"Name\",\n        fluid: true\n      })))));\n    }\n  }]);\n\n  return CreateList;\n}(Component);\n\nexport { CreateList as default };","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/edit/index.js"],"names":["React","Component","Layout","Grid","Dropdown","Input","Button","Message","actSetList","key","text","value","activities","name","weight","CreateList","actList","title","e","push","setState","index","map","indexOf","state","splice","handleRemove","color","content","onClick","handleModify","handleDecrement","handleIncrement","textAlign","handleAddition","handleChange","handleDelete","handleEdit","handleInputChange","handleAdd"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,OAAvC,QAAqD,mBAArD;AAEA,IAAIC,UAAU,GAAG,CACf;AACEC,EAAAA,GAAG,EAAE,gBADP;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADU,EAKV;AACED,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GALU;AAJd,CADe,EAgBf;AACEL,EAAAA,GAAG,EAAE,gBADP;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADU,EAKV;AACED,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,MAAM,EAAE;AAFV,GALU;AAJd,CAhBe,CAAjB;;IAiCqBC,U;;;;;;;;;;;;;;;;4DACb;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,K;;qEAMW,UAACC,CAAD;AAAA,UAAKP,KAAL,QAAKA,KAAL;AAAA,aAAgBH,UAAU,CAACW,IAAX,CAAgB;AAACV,QAAAA,GAAG,EAAEE,KAAN;AAAaD,QAAAA,IAAI,EAAEC,KAAnB;AAA0BA,QAAAA,KAAK,EAALA;AAA1B,OAAhB,CAAhB;AAAA,K;;mEAGF,UAACO,CAAD;AAAA,UAAKP,KAAL,SAAKA,KAAL;AAAA,aAAgB,MAAKS,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAEL,KAAV;AAAiBM,QAAAA,KAAK,EAAEN;AAAxB,OAAd,CAAhB;AAAA,K;;wEAGK,UAACO,CAAD;AAAA,UAAKP,KAAL,SAAKA,KAAL;AAAA,aAAgB,MAAKS,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAEL;AAAV,OAAd,CAAhB;AAAA,K;;mEAGL,YAAM;AACnB,UAAMU,KAAK,GAAGb,UAAU,CAACc,GAAX,CAAe,UAASJ,CAAT,EAAY;AACvC,eAAOA,CAAC,CAACT,GAAT;AACD,OAFa,EAEXc,OAFW,CAEH,MAAKC,KAAL,CAAWP,KAFR,CAAd;AAGAT,MAAAA,UAAU,CAACiB,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB;;AACA,YAAKD,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAAd;AACD,K;;iEAGY,YAAM;AACjB,UAAMI,KAAK,GAAGb,UAAU,CAACc,GAAX,CAAe,UAASJ,CAAT,EAAY;AACvC,eAAOA,CAAC,CAACT,GAAT;AACD,OAFa,EAEXc,OAFW,CAEH,MAAKC,KAAL,CAAWP,KAFR,CAAd;AAGAT,MAAAA,UAAU,CAACa,KAAD,CAAV,CAAkBZ,GAAlB,GAAwB,MAAKe,KAAL,CAAWR,OAAnC;AACAR,MAAAA,UAAU,CAACa,KAAD,CAAV,CAAkBX,IAAlB,GAAyB,MAAKc,KAAL,CAAWR,OAApC;AACAR,MAAAA,UAAU,CAACa,KAAD,CAAV,CAAkBV,KAAlB,GAA0B,MAAKa,KAAL,CAAWR,OAArC;;AACA,YAAKI,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE,MAAKO,KAAL,CAAWR;AAAnB,OAAd;AACD,K;;gEAGW,YAAM,CAEjB,C;;mEAGc,YAAM,CAEpB,C;;mEAGc,YAAM,CAEpB,C;;sEAGiB,YAAM,CAEvB,C;;sEAGiB,YAAM,CAEvB,C;;;;;;;uCAEkB;AACjB,aACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,aAAa,EAAC;AAHhB,SAKE,MAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAE,KAAKU;AALhB,QALF,CADF,EAcE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,KAAD;AACE,QAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,MADD;AAENC,UAAAA,OAAO,EAAE,WAFH;AAGNC,UAAAA,OAAO,EAAE,KAAKC;AAHR,SADV;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,KAAK;AAPP,QADF,CAdF,EAyBE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,OAAO,EAAE,KAAKC;AALhB,QADF,CAzBF,EAkCE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,QAlCF,EAoCE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,OAAO,EAAE,KAAKC;AALhB,QADF,CApCF,CADF;AAgDD;;;6BAEQ;AAAA;;AACP,aACE,MAAC,MAAD,QACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ;AAAX,+BADF,CADF,EAIE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,QAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,OAAO,EAAEzB,UAJX;AAKE,QAAA,cAAc,MALhB;AAME,QAAA,aAAa,EAAC,oBANhB;AAOE,QAAA,SAAS,EAAE,KAAK0B,cAPlB;AAQE,QAAA,QAAQ,EAAE,KAAKC,YARjB;AASE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWP;AATpB,QADF,CAJF,CADF,EAmBE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC;AAAvB,SACE,MAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,OAAO,EAAE,KAAKmB;AAJhB,QADF,EAOE,MAAC,KAAD;AACE,QAAA,MAAM,EAAE;AACNT,UAAAA,KAAK,EAAE,MADD;AAENC,UAAAA,OAAO,EAAE,YAFH;AAGNC,UAAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACQ,UAAL,EAAN;AAAA;AAHH,SADV;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,WAAW,EAAC,OAPd;AAQE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWR,OARpB;AASE,QAAA,QAAQ,EAAE,KAAKsB;AATjB,QAPF,CADF,CAnBF,EAwCE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,QADF,EAEE,MAAC,IAAD,CAAM,MAAN;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,aAAa,EAAC;AAHhB,SAKE,MAAC,OAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,eAFT;AAGE,QAAA,OAAO,EAAC;AAHV,QALF,CAFF,EAaE,MAAC,IAAD,CAAM,MAAN;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,SAAS,EAAC;AAFZ,SAIE,MAAC,OAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,OAAO,EAAC;AAHV,QAJF,CAbF,CAxCF,EAgEE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,aAAa,EAAC;AAHhB,SAKE,MAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAE,KAAKC;AALhB,QALF,CADF,EAcE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,KAAK;AAHP,QADF,CAdF,CAhEF,CADF,CADF;AA2FD;;;;EA3MqCtC,S;;SAAnBc,U","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Grid, Dropdown, Input, Button, Message} from 'semantic-ui-react';\r\n\r\nlet actSetList = [\r\n  {\r\n    key: 'Activity Set 1',\r\n    text: 'Activity Set 1',\r\n    value: 'Activity Set 1',\r\n    activities: [\r\n      {\r\n        name: 'Reading',\r\n        weight: 2\r\n      },\r\n      {\r\n        name: 'Writing',\r\n        weight: 5\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: 'Activity Set 2',\r\n    text: 'Activity Set 2',\r\n    value: 'Activity Set 2',\r\n    activities: [\r\n      {\r\n        name: 'Running',\r\n        weight: 3\r\n      },\r\n      {\r\n        name: 'Biking',\r\n        weight: 1\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default class CreateList extends Component {\r\n  state={\r\n    actList: '',\r\n    title: ''\r\n  };\r\n\r\n// Adds activity list into data\r\n  handleAddition = (e, {value}) => actSetList.push({key: value, text: value, value});\r\n\r\n// Changes title display to match current value and keeps track of true title\r\n  handleChange = (e, {value}) => this.setState({actList: value, title: value});\r\n\r\n// Allows changes in input field\r\n  handleInputChange = (e, {value}) => this.setState({actList: value});\r\n\r\n// Deletes the activity list\r\n  handleDelete = () => {\r\n    const index = actSetList.map(function(e) {\r\n      return e.key;\r\n    }).indexOf(this.state.title);\r\n    actSetList.splice(index, 1);\r\n    this.setState({actList: '', title: ''})\r\n  };\r\n\r\n// Edits the title of the active activity list\r\n  handleEdit = () => {\r\n    const index = actSetList.map(function(e) {\r\n      return e.key;\r\n    }).indexOf(this.state.title);\r\n    actSetList[index].key = this.state.actList;\r\n    actSetList[index].text = this.state.actList;\r\n    actSetList[index].value = this.state.actList;\r\n    this.setState({title: this.state.actList});\r\n  };\r\n\r\n// Adds an activity to the activity list\r\n  handleAdd = () => {\r\n\r\n  };\r\n\r\n// Removes an activity from the activity list\r\n  handleRemove = () => {\r\n\r\n  };\r\n\r\n// Modifies the name of an activity\r\n  handleModify = () => {\r\n\r\n  };\r\n\r\n// Increments the weight of an activity\r\n  handleIncrement = () => {\r\n\r\n  }\r\n\r\n// Decrements the weight of an activity\r\n  handleDecrement = () => {\r\n\r\n  };\r\n\r\n  renderActivities() {\r\n    return(\r\n      <Grid.Row>\r\n        <Grid.Column\r\n          width={2}\r\n          textAlign='right'\r\n          verticalAlign='middle'\r\n        >\r\n          <Button\r\n            circular\r\n            negative\r\n            icon='minus'\r\n            size='medium'\r\n            onClick={this.handleRemove}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={9}>\r\n          <Input\r\n            action={{\r\n              color: 'blue',\r\n              content: 'Edit Name',\r\n              onClick: this.handleModify\r\n            }}\r\n            size='small'\r\n            fluid\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={1}>\r\n          <Button\r\n            circular\r\n            negative\r\n            icon='minus'\r\n            size='mini'\r\n            onClick={this.handleDecrement}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n        </Grid.Column>\r\n        <Grid.Column width={1}>\r\n          <Button\r\n            circular\r\n            positive\r\n            icon='plus'\r\n            size='mini'\r\n            onClick={this.handleIncrement}\r\n          />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign: 'right'}}>Saved Activity Sets</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown\r\n                placeholder='Activity Set'\r\n                search\r\n                selection\r\n                options={actSetList}\r\n                allowAdditions\r\n                additionLabel='New Activity Set: '\r\n                onAddItem={this.handleAddition}\r\n                onChange={this.handleChange}\r\n                value={this.state.title}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column textAlign='center'>\r\n              <Button\r\n                negative\r\n                icon='minus'\r\n                size='large'\r\n                onClick={this.handleDelete}\r\n              />\r\n              <Input\r\n                action={{\r\n                  color: 'blue',\r\n                  content: 'Edit Title',\r\n                  onClick: () => this.handleEdit()\r\n                }}\r\n                size='large'\r\n                placeholder='Title'\r\n                value={this.state.actList}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}></Grid.Column>\r\n            <Grid.Column\r\n              width={9}\r\n              textAlign='center'\r\n              verticalAlign='bottom'\r\n            >\r\n              <Message\r\n                color='blue'\r\n                header='Activity Name'\r\n                content='Name of your break activity.'\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column\r\n              width={5}\r\n              textAlign='center'\r\n            >\r\n              <Message\r\n                color='red'\r\n                header='Weight'\r\n                content='How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.'\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column\r\n              width={2}\r\n              textAlign='right'\r\n              verticalAlign='middle'\r\n            >\r\n              <Button\r\n                circular\r\n                positive\r\n                icon='plus'\r\n                size='medium'\r\n                onClick={this.handleAdd}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={9}>\r\n              <Input\r\n                size='small'\r\n                placeholder='Name'\r\n                fluid\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}