{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Dropdown, Input, Button, Message, Popup } from 'semantic-ui-react';\nvar actSetList = [];\n\nfunction getOptions() {\n  actSetList.length = 0;\n\n  for (var i in window.localStorage) {\n    if (window.localStorage.getItem(i) && i !== \"ally-supports-cache\") {\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\n      console.log(window.localStorage.key(i));\n    }\n  }\n}\n\nvar CreateList = /*#__PURE__*/function (_Component) {\n  _inherits(CreateList, _Component);\n\n  var _super = _createSuper(CreateList);\n\n  function CreateList() {\n    var _this;\n\n    _classCallCheck(this, CreateList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      actList: '',\n      title: '',\n      tempName: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddition\", function (e, _ref) {\n      var value = _ref.value;\n      window.localStorage.setItem(value, JSON.stringify({\n        key: value,\n        text: value,\n        value: value,\n        activities: []\n      }));\n      getOptions();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e, _ref2) {\n      var value = _ref2.value;\n      return _this.setState({\n        actList: value,\n        title: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (e, _ref3) {\n      var value = _ref3.value;\n      return _this.setState({\n        actList: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDelete\", function () {\n      window.localStorage.removeItem(_this.state.title);\n\n      _this.setState({\n        actList: '',\n        title: ''\n      });\n\n      getOptions();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAntidelete\", function () {\n      if (_this.state.actList) {\n        return __jsx(Button, {\n          negative: true,\n          content: \"Comfirm Delete\",\n          onClick: _this.handleDelete\n        });\n      } else {\n        return __jsx(Message, {\n          negative: true,\n          content: \"You cannot delete nothing!\"\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEdit\", function () {\n      if (_this.state.title) {\n        var activities = JSON.parse(window.localStorage.getItem(_this.state.title)).activities;\n        window.localStorage.removeItem(_this.state.title);\n        window.localStorage.setItem(_this.state.actList, JSON.stringify({\n          key: _this.state.actList,\n          text: _this.state.actList,\n          value: _this.state.actList,\n          activities: activities\n        }));\n\n        _this.setState({\n          title: _this.state.actList\n        });\n\n        getOptions();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleActChange\", function (e, _ref4) {\n      var value = _ref4.value;\n      return _this.setState({\n        tempName: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAdd\", function () {\n      if (_this.state.tempName) {\n        var activities = JSON.parse(window.localStorage.getItem(_this.state.title)).activities;\n        activities.push({\n          key: _this.state.tempName,\n          weight: 1\n        });\n        window.localStorage.setItem(_this.state.title, JSON.stringify({\n          key: _this.state.title,\n          text: _this.state.title,\n          value: _this.state.title,\n          activities: activities\n        }));\n\n        _this.setState({\n          tempName: ''\n        });\n\n        getOptions();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRemove\", function (e) {\n      var activities = JSON.parse(window.localStorage.getItem(_this.state.title)).activities;\n      var removed = e.currentTarget.parentNode.parentNode.getAttribute('class').replace('row ', '');\n      activities.splice(activities.map(function (e) {\n        return e.key;\n      }).indexOf(removed), 1);\n      window.localStorage.setItem(_this.state.title, JSON.stringify({\n        key: _this.state.title,\n        text: _this.state.title,\n        value: _this.state.title,\n        activities: activities\n      }));\n\n      _this.setState({\n        tempName: _this.state.tempName\n      });\n\n      getOptions();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleModify\", function (e) {\n      if (e.currentTarget.parentNode.querySelector('input').value) {\n        var activities = JSON.parse(window.localStorage.getItem(_this.state.title)).activities;\n        var newName = e.currentTarget.parentNode.querySelector('input').value;\n        var oldName = e.currentTarget.parentNode.querySelector('input').getAttribute('value');\n        activities[activities.map(function (e) {\n          return e.key;\n        }).indexOf(oldName)].key = newName;\n        window.localStorage.setItem(_this.state.title, JSON.stringify({\n          key: _this.state.title,\n          text: _this.state.title,\n          value: _this.state.title,\n          activities: activities\n        }));\n\n        _this.setState({\n          tempName: _this.state.tempName\n        });\n\n        getOptions();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIncrement\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDecrement\", function () {});\n\n    return _this;\n  }\n\n  _createClass(CreateList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('load', getOptions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('load', getOptions);\n    }\n  }, {\n    key: \"renderActivities\",\n    value: function renderActivities() {\n      var _this2 = this;\n\n      if (this.state.title) {\n        if (window.localStorage.getItem(this.state.title)) {\n          return JSON.parse(window.localStorage.getItem(this.state.title)).activities.map(function (activity) {\n            return __jsx(Grid.Row, {\n              key: activity.key,\n              className: activity.key\n            }, __jsx(Grid.Column, {\n              width: 2,\n              textAlign: \"right\",\n              verticalAlign: \"middle\"\n            }, __jsx(Button, {\n              circular: true,\n              negative: true,\n              icon: \"minus\",\n              size: \"medium\",\n              onClick: _this2.handleRemove\n            })), __jsx(Grid.Column, {\n              width: 9\n            }, __jsx(Input, {\n              action: {\n                color: 'blue',\n                content: 'Edit Name',\n                onClick: _this2.handleModify\n              },\n              size: \"small\",\n              fluid: true,\n              defaultValue: activity.key\n            })), __jsx(Grid.Column, {\n              width: 2,\n              textAlign: \"right\",\n              verticalAlign: \"middle\"\n            }, __jsx(Button, {\n              circular: true,\n              negative: true,\n              icon: \"minus\",\n              size: \"mini\",\n              onClick: _this2.handleDecrement\n            })), __jsx(Grid.Column, {\n              width: 1,\n              textAlign: \"center\",\n              verticalAlign: \"middle\"\n            }, __jsx(\"h2\", null, activity.weight)), __jsx(Grid.Column, {\n              width: 2,\n              verticalAlign: \"middle\"\n            }, __jsx(Button, {\n              circular: true,\n              positive: true,\n              icon: \"plus\",\n              size: \"mini\",\n              onClick: _this2.handleIncrement\n            })));\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, \"Saved Activity Sets\")), __jsx(Grid.Column, {\n        width: 5\n      }, __jsx(Dropdown, {\n        placeholder: \"Activity Set\",\n        search: true,\n        selection: true,\n        options: actSetList,\n        allowAdditions: true,\n        additionLabel: \"New Activity Set: \",\n        onAddItem: this.handleAddition,\n        onChange: this.handleChange,\n        value: this.state.title\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        textAlign: \"center\"\n      }, __jsx(Popup, {\n        trigger: __jsx(Input, {\n          size: \"large\",\n          placeholder: \"Title\",\n          value: this.state.actList,\n          onChange: this.handleInputChange,\n          action: true\n        }, __jsx(Popup, {\n          trigger: __jsx(Button, {\n            negative: true,\n            icon: \"minus\",\n            size: \"large\"\n          }),\n          content: this.handleAntidelete,\n          on: \"click\",\n          position: \"top center\"\n        }), __jsx(\"input\", null), __jsx(Button, {\n          color: \"blue\",\n          content: \"Edit Title\",\n          onClick: this.handleEdit,\n          disabled: !this.state.actList\n        })),\n        content: __jsx(Message, {\n          negative: true,\n          content: \"You cannot name an activity set nothing!\"\n        }),\n        position: \"top center\",\n        disabled: !!this.state.actList\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 2\n      }), __jsx(Grid.Column, {\n        width: 9,\n        textAlign: \"center\",\n        verticalAlign: \"bottom\"\n      }, __jsx(Message, {\n        color: \"blue\",\n        header: \"Activity Name\",\n        content: \"Name of your break activity.\"\n      })), __jsx(Grid.Column, {\n        width: 5,\n        textAlign: \"center\"\n      }, __jsx(Message, {\n        color: \"red\",\n        header: \"Weight\",\n        content: \"How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.\"\n      }))), this.renderActivities(), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 2,\n        textAlign: \"right\",\n        verticalAlign: \"middle\"\n      }, __jsx(Button, {\n        circular: true,\n        positive: true,\n        icon: \"plus\",\n        size: \"medium\",\n        onClick: this.handleAdd\n      })), __jsx(Grid.Column, {\n        width: 9\n      }, __jsx(Input, {\n        size: \"small\",\n        placeholder: \"Name\",\n        fluid: true,\n        value: this.state.tempName,\n        onChange: this.handleActChange\n      })))));\n    }\n  }]);\n\n  return CreateList;\n}(Component);\n\nexport { CreateList as default };","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/edit/index.js"],"names":["React","Component","Layout","Grid","Dropdown","Input","Button","Message","Popup","actSetList","getOptions","length","i","window","localStorage","getItem","push","JSON","parse","console","log","key","CreateList","actList","title","tempName","e","value","setItem","stringify","text","activities","setState","removeItem","state","handleDelete","weight","removed","currentTarget","parentNode","getAttribute","replace","splice","map","indexOf","querySelector","newName","oldName","addEventListener","removeEventListener","activity","handleRemove","color","content","onClick","handleModify","handleDecrement","handleIncrement","textAlign","handleAddition","handleChange","handleInputChange","handleAntidelete","handleEdit","renderActivities","handleAdd","handleActChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Grid, Dropdown, Input, Button, Message, Popup} from 'semantic-ui-react';\r\n\r\nlet actSetList = [];\r\nfunction getOptions() {\r\n  actSetList.length = 0;\r\n  for (const i in window.localStorage) {\r\n    if (window.localStorage.getItem(i) && i !== \"ally-supports-cache\") {\r\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\r\n      console.log(window.localStorage.key(i));\r\n    }\r\n  }\r\n}\r\n\r\nexport default class CreateList extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('load', getOptions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('load', getOptions)\r\n  }\r\n\r\n  state={\r\n    actList: '',\r\n    title: '',\r\n    tempName: ''\r\n  };\r\n\r\n// Adds activity list into local storage\r\n  handleAddition = (e, {value}) => {\r\n    window.localStorage.setItem(value, JSON.stringify({key: value, text: value, value, activities: []}));\r\n    getOptions();\r\n  }\r\n\r\n// Changes title display to match current value and keeps track of true title\r\n  handleChange = (e, {value}) => this.setState({actList: value, title: value});\r\n\r\n// Allows changes in activity list input field\r\n  handleInputChange = (e, {value}) => this.setState({actList: value});\r\n\r\n// Deletes the activity list\r\n  handleDelete = () => {\r\n    window.localStorage.removeItem(this.state.title);\r\n    this.setState({actList: '', title: ''});\r\n    getOptions();\r\n  };\r\n\r\n// Ensures no accidental deletion\r\n  handleAntidelete = () => {\r\n    if (this.state.actList) {\r\n      return(\r\n        <Button\r\n          negative\r\n          content='Comfirm Delete'\r\n          onClick={this.handleDelete}\r\n        />\r\n      );\r\n    } else {\r\n      return(\r\n        <Message\r\n          negative\r\n          content='You cannot delete nothing!'\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n// Edits the title of the active activity list\r\n  handleEdit = () => {\r\n    if (this.state.title) {\r\n      const activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      window.localStorage.removeItem(this.state.title);\r\n      window.localStorage.setItem(this.state.actList, JSON.stringify({key: this.state.actList, text: this.state.actList, value: this.state.actList, activities}));\r\n      this.setState({title: this.state.actList});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Allows changes in activity input field\r\n  handleActChange = (e, {value}) => this.setState({tempName: value});\r\n\r\n// Adds an activity to the activity list\r\n  handleAdd = () => {\r\n    if (this.state.tempName) {\r\n      let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      activities.push({key: this.state.tempName, weight: 1});\r\n      window.localStorage.setItem(this.state.title, JSON.stringify({key: this.state.title, text: this.state.title, value: this.state.title, activities}));\r\n      this.setState({tempName: ''});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Removes an activity from the activity list\r\n  handleRemove = (e) => {\r\n    let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n    const removed = e.currentTarget.parentNode.parentNode.getAttribute('class').replace('row ', '');\r\n    activities.splice(activities.map(function(e) { return e.key; }).indexOf(removed), 1);\r\n    window.localStorage.setItem(this.state.title, JSON.stringify({key: this.state.title, text: this.state.title, value: this.state.title, activities}));\r\n    this.setState({tempName: this.state.tempName});\r\n    getOptions();\r\n  };\r\n\r\n// Modifies the name of an activity\r\n  handleModify = (e) => {\r\n    if (e.currentTarget.parentNode.querySelector('input').value) {\r\n      let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      const newName = e.currentTarget.parentNode.querySelector('input').value;\r\n      const oldName = e.currentTarget.parentNode.querySelector('input').getAttribute('value');\r\n      activities[activities.map(function(e) { return e.key; }).indexOf(oldName)].key = newName;\r\n      window.localStorage.setItem(this.state.title, JSON.stringify({key: this.state.title, text: this.state.title, value: this.state.title, activities}));\r\n      this.setState({tempName: this.state.tempName});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Increments the weight of an activity\r\n  handleIncrement = () => {\r\n\r\n  }\r\n\r\n// Decrements the weight of an activity\r\n  handleDecrement = () => {\r\n\r\n  };\r\n\r\n  renderActivities() {\r\n    if (this.state.title) {\r\n      if (window.localStorage.getItem(this.state.title)) {\r\n        return (\r\n          JSON.parse(window.localStorage.getItem(this.state.title)).activities.map(activity => {\r\n            return(\r\n              <Grid.Row\r\n                key={activity.key}\r\n                className={activity.key}\r\n              >\r\n                <Grid.Column\r\n                  width={2}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    negative\r\n                    icon='minus'\r\n                    size='medium'\r\n                    onClick={this.handleRemove}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={9}>\r\n                  <Input\r\n                    action={{\r\n                      color: 'blue',\r\n                      content: 'Edit Name',\r\n                      onClick: this.handleModify\r\n                    }}\r\n                    size='small'\r\n                    fluid\r\n                    defaultValue={activity.key}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={2}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    negative\r\n                    icon='minus'\r\n                    size='mini'\r\n                    onClick={this.handleDecrement}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={1}\r\n                  textAlign='center'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <h2>{activity.weight}</h2>\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={2}\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    positive\r\n                    icon='plus'\r\n                    size='mini'\r\n                    onClick={this.handleIncrement}\r\n                  />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            );\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign: 'right'}}>Saved Activity Sets</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown\r\n                placeholder='Activity Set'\r\n                search\r\n                selection\r\n                options={actSetList}\r\n                allowAdditions\r\n                additionLabel='New Activity Set: '\r\n                onAddItem={this.handleAddition}\r\n                onChange={this.handleChange}\r\n                value={this.state.title}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column textAlign='center'>\r\n              <Popup\r\n                trigger={\r\n                  <Input\r\n                    size='large'\r\n                    placeholder='Title'\r\n                    value={this.state.actList}\r\n                    onChange={this.handleInputChange}\r\n                    action\r\n                  >\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          negative\r\n                          icon='minus'\r\n                          size='large'\r\n                        />\r\n                      }\r\n                      content={this.handleAntidelete}\r\n                      on='click'\r\n                      position='top center'\r\n                    />\r\n                    <input />\r\n                    <Button\r\n                      color='blue'\r\n                      content='Edit Title'\r\n                      onClick={this.handleEdit}\r\n                      disabled={!this.state.actList}\r\n                    />\r\n                  </Input>\r\n                }\r\n                content={\r\n                  <Message\r\n                    negative\r\n                    content='You cannot name an activity set nothing!'\r\n                  />\r\n                }\r\n                position='top center'\r\n                disabled={!!this.state.actList}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}></Grid.Column>\r\n            <Grid.Column\r\n              width={9}\r\n              textAlign='center'\r\n              verticalAlign='bottom'\r\n            >\r\n              <Message\r\n                color='blue'\r\n                header='Activity Name'\r\n                content='Name of your break activity.'\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column\r\n              width={5}\r\n              textAlign='center'\r\n            >\r\n              <Message\r\n                color='red'\r\n                header='Weight'\r\n                content='How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.'\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          {this.renderActivities()}\r\n          <Grid.Row>\r\n            <Grid.Column\r\n              width={2}\r\n              textAlign='right'\r\n              verticalAlign='middle'\r\n            >\r\n              <Button\r\n                circular\r\n                positive\r\n                icon='plus'\r\n                size='medium'\r\n                onClick={this.handleAdd}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={9}>\r\n              <Input\r\n                size='small'\r\n                placeholder='Name'\r\n                fluid\r\n                value={this.state.tempName}\r\n                onChange={this.handleActChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}