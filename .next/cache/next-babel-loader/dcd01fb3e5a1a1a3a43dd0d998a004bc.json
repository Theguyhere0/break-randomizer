{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Dropdown, Input, Button, Message, Popup } from 'semantic-ui-react';\nlet actSetList = [];\n\nfunction getOptions() {\n  actSetList.length = 0;\n\n  for (const i in window.localStorage) {\n    if (window.localStorage.getItem(i) && i !== window.localStorage.key(0)) {\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\n    }\n  }\n}\n\nexport default class CreateList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      actList: '',\n      title: '',\n      tempName: ''\n    });\n\n    _defineProperty(this, \"handleAddition\", (e, {\n      value\n    }) => {\n      window.localStorage.setItem(value, JSON.stringify({\n        key: value,\n        text: value,\n        value,\n        activities: []\n      }));\n      getOptions();\n    });\n\n    _defineProperty(this, \"handleChange\", (e, {\n      value\n    }) => this.setState({\n      actList: value,\n      title: value\n    }));\n\n    _defineProperty(this, \"handleInputChange\", (e, {\n      value\n    }) => this.setState({\n      actList: value\n    }));\n\n    _defineProperty(this, \"handleDelete\", () => {\n      window.localStorage.removeItem(this.state.title);\n      this.setState({\n        actList: '',\n        title: ''\n      });\n      getOptions();\n    });\n\n    _defineProperty(this, \"handleAntidelete\", () => {\n      if (this.state.actList) {\n        return __jsx(Button, {\n          negative: true,\n          content: \"Comfirm Delete\",\n          onClick: this.handleDelete\n        });\n      } else {\n        return __jsx(Message, {\n          negative: true,\n          content: \"You cannot delete nothing!\"\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleEdit\", () => {\n      if (this.state.title) {\n        const activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\n        window.localStorage.removeItem(this.state.title);\n        window.localStorage.setItem(this.state.actList, JSON.stringify({\n          key: this.state.actList,\n          text: this.state.actList,\n          value: this.state.actList,\n          activities\n        }));\n        this.setState({\n          title: this.state.actList\n        });\n        getOptions();\n      }\n    });\n\n    _defineProperty(this, \"handleActChange\", (e, {\n      value\n    }) => this.setState({\n      tempName: value\n    }));\n\n    _defineProperty(this, \"handleAdd\", () => {\n      if (this.state.tempName) {\n        let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\n        activities.push({\n          key: this.state.tempName,\n          weight: 1\n        });\n        window.localStorage.setItem(this.state.title, JSON.stringify({\n          key: this.state.title,\n          text: this.state.title,\n          value: this.state.title,\n          activities\n        }));\n        this.setState({\n          tempName: ''\n        });\n        getOptions();\n      }\n    });\n\n    _defineProperty(this, \"handleRemove\", e => {\n      console.log(e.currentTarget.parentNode.parentNode.dataset.class);\n    });\n\n    _defineProperty(this, \"handleModify\", () => {});\n\n    _defineProperty(this, \"handleIncrement\", () => {});\n\n    _defineProperty(this, \"handleDecrement\", () => {});\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', getOptions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', getOptions);\n  }\n\n  renderActivities() {\n    if (this.state.title) {\n      if (window.localStorage.getItem(this.state.title)) {\n        return JSON.parse(window.localStorage.getItem(this.state.title)).activities.map(activity => {\n          return __jsx(Grid.Row, {\n            key: activity.key,\n            className: activity.key\n          }, __jsx(Grid.Column, {\n            width: 2,\n            textAlign: \"right\",\n            verticalAlign: \"middle\"\n          }, __jsx(Button, {\n            circular: true,\n            negative: true,\n            icon: \"minus\",\n            size: \"medium\",\n            onClick: this.handleRemove\n          })), __jsx(Grid.Column, {\n            width: 9\n          }, __jsx(Input, {\n            action: {\n              color: 'blue',\n              content: 'Edit Name',\n              onClick: this.handleModify\n            },\n            size: \"small\",\n            fluid: true,\n            defaultValue: activity.key\n          })), __jsx(Grid.Column, {\n            width: 2,\n            textAlign: \"right\",\n            verticalAlign: \"middle\"\n          }, __jsx(Button, {\n            circular: true,\n            negative: true,\n            icon: \"minus\",\n            size: \"mini\",\n            onClick: this.handleDecrement\n          })), __jsx(Grid.Column, {\n            width: 1,\n            textAlign: \"center\",\n            verticalAlign: \"middle\"\n          }, __jsx(\"h2\", null, activity.weight)), __jsx(Grid.Column, {\n            width: 2,\n            verticalAlign: \"middle\"\n          }, __jsx(Button, {\n            circular: true,\n            positive: true,\n            icon: \"plus\",\n            size: \"mini\",\n            onClick: this.handleIncrement\n          })));\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(\"h2\", {\n      style: {\n        textAlign: 'right'\n      }\n    }, \"Saved Activity Sets\")), __jsx(Grid.Column, {\n      width: 5\n    }, __jsx(Dropdown, {\n      placeholder: \"Activity Set\",\n      search: true,\n      selection: true,\n      options: actSetList,\n      allowAdditions: true,\n      additionLabel: \"New Activity Set: \",\n      onAddItem: this.handleAddition,\n      onChange: this.handleChange,\n      value: this.state.title\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      textAlign: \"center\"\n    }, __jsx(Popup, {\n      trigger: __jsx(Input, {\n        size: \"large\",\n        placeholder: \"Title\",\n        value: this.state.actList,\n        onChange: this.handleInputChange,\n        action: true\n      }, __jsx(Popup, {\n        trigger: __jsx(Button, {\n          negative: true,\n          icon: \"minus\",\n          size: \"large\"\n        }),\n        content: this.handleAntidelete,\n        on: \"click\",\n        position: \"top center\"\n      }), __jsx(\"input\", null), __jsx(Button, {\n        color: \"blue\",\n        content: \"Edit Title\",\n        onClick: this.handleEdit,\n        disabled: !this.state.actList\n      })),\n      content: __jsx(Message, {\n        negative: true,\n        content: \"You cannot name an activity set nothing!\"\n      }),\n      position: \"top center\",\n      disabled: !!this.state.actList\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 2\n    }), __jsx(Grid.Column, {\n      width: 9,\n      textAlign: \"center\",\n      verticalAlign: \"bottom\"\n    }, __jsx(Message, {\n      color: \"blue\",\n      header: \"Activity Name\",\n      content: \"Name of your break activity.\"\n    })), __jsx(Grid.Column, {\n      width: 5,\n      textAlign: \"center\"\n    }, __jsx(Message, {\n      color: \"red\",\n      header: \"Weight\",\n      content: \"How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.\"\n    }))), this.renderActivities(), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 2,\n      textAlign: \"right\",\n      verticalAlign: \"middle\"\n    }, __jsx(Button, {\n      circular: true,\n      positive: true,\n      icon: \"plus\",\n      size: \"medium\",\n      onClick: this.handleAdd\n    })), __jsx(Grid.Column, {\n      width: 9\n    }, __jsx(Input, {\n      size: \"small\",\n      placeholder: \"Name\",\n      fluid: true,\n      value: this.state.tempName,\n      onChange: this.handleActChange\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/edit/index.js"],"names":["React","Component","Layout","Grid","Dropdown","Input","Button","Message","Popup","actSetList","getOptions","length","i","window","localStorage","getItem","key","push","JSON","parse","CreateList","actList","title","tempName","e","value","setItem","stringify","text","activities","setState","removeItem","state","handleDelete","weight","console","log","currentTarget","parentNode","dataset","class","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","renderActivities","map","activity","handleRemove","color","content","onClick","handleModify","handleDecrement","handleIncrement","render","textAlign","handleAddition","handleChange","handleInputChange","handleAntidelete","handleEdit","handleAdd","handleActChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Grid, Dropdown, Input, Button, Message, Popup} from 'semantic-ui-react';\r\n\r\nlet actSetList = [];\r\nfunction getOptions() {\r\n  actSetList.length = 0;\r\n  for (const i in window.localStorage) {\r\n    if (window.localStorage.getItem(i) && i !== window.localStorage.key(0)) {\r\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\r\n    }\r\n  }\r\n}\r\n\r\nexport default class CreateList extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('load', getOptions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('load', getOptions)\r\n  }\r\n\r\n  state={\r\n    actList: '',\r\n    title: '',\r\n    tempName: ''\r\n  };\r\n\r\n// Adds activity list into local storage\r\n  handleAddition = (e, {value}) => {\r\n    window.localStorage.setItem(value, JSON.stringify({key: value, text: value, value, activities: []}));\r\n    getOptions();\r\n  }\r\n\r\n// Changes title display to match current value and keeps track of true title\r\n  handleChange = (e, {value}) => this.setState({actList: value, title: value});\r\n\r\n// Allows changes in activity list input field\r\n  handleInputChange = (e, {value}) => this.setState({actList: value});\r\n\r\n// Deletes the activity list\r\n  handleDelete = () => {\r\n    window.localStorage.removeItem(this.state.title);\r\n    this.setState({actList: '', title: ''});\r\n    getOptions();\r\n  };\r\n\r\n// Ensures no accidental deletion\r\n  handleAntidelete = () => {\r\n    if (this.state.actList) {\r\n      return(\r\n        <Button\r\n          negative\r\n          content='Comfirm Delete'\r\n          onClick={this.handleDelete}\r\n        />\r\n      );\r\n    } else {\r\n      return(\r\n        <Message\r\n          negative\r\n          content='You cannot delete nothing!'\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n// Edits the title of the active activity list\r\n  handleEdit = () => {\r\n    if (this.state.title) {\r\n      const activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      window.localStorage.removeItem(this.state.title);\r\n      window.localStorage.setItem(this.state.actList, JSON.stringify({key: this.state.actList, text: this.state.actList, value: this.state.actList, activities}));\r\n      this.setState({title: this.state.actList});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Allows changes in activity input field\r\n  handleActChange = (e, {value}) => this.setState({tempName: value});\r\n\r\n// Adds an activity to the activity list\r\n  handleAdd = () => {\r\n    if (this.state.tempName) {\r\n      let activities = JSON.parse(window.localStorage.getItem(this.state.title)).activities;\r\n      activities.push({key: this.state.tempName, weight: 1});\r\n      window.localStorage.setItem(this.state.title, JSON.stringify({key: this.state.title, text: this.state.title, value: this.state.title, activities}));\r\n      this.setState({tempName: ''});\r\n      getOptions();\r\n    }\r\n  };\r\n\r\n// Removes an activity from the activity list\r\n  handleRemove = (e) => {\r\n    console.log(e.currentTarget.parentNode.parentNode.dataset.class);\r\n  };\r\n\r\n// Modifies the name of an activity\r\n  handleModify = () => {\r\n\r\n  };\r\n\r\n// Increments the weight of an activity\r\n  handleIncrement = () => {\r\n\r\n  }\r\n\r\n// Decrements the weight of an activity\r\n  handleDecrement = () => {\r\n\r\n  };\r\n\r\n  renderActivities() {\r\n    if (this.state.title) {\r\n      if (window.localStorage.getItem(this.state.title)) {\r\n        return (\r\n          JSON.parse(window.localStorage.getItem(this.state.title)).activities.map(activity => {\r\n            return(\r\n              <Grid.Row key={activity.key} className={activity.key}>\r\n                <Grid.Column\r\n                  width={2}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    negative\r\n                    icon='minus'\r\n                    size='medium'\r\n                    onClick={this.handleRemove}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column width={9}>\r\n                  <Input\r\n                    action={{\r\n                      color: 'blue',\r\n                      content: 'Edit Name',\r\n                      onClick: this.handleModify\r\n                    }}\r\n                    size='small'\r\n                    fluid\r\n                    defaultValue={activity.key}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={2}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    negative\r\n                    icon='minus'\r\n                    size='mini'\r\n                    onClick={this.handleDecrement}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={1}\r\n                  textAlign='center'\r\n                  verticalAlign='middle'\r\n                >\r\n                  <h2>{activity.weight}</h2>\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={2}\r\n                  verticalAlign='middle'\r\n                >\r\n                  <Button\r\n                    circular\r\n                    positive\r\n                    icon='plus'\r\n                    size='mini'\r\n                    onClick={this.handleIncrement}\r\n                  />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            );\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign: 'right'}}>Saved Activity Sets</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown\r\n                placeholder='Activity Set'\r\n                search\r\n                selection\r\n                options={actSetList}\r\n                allowAdditions\r\n                additionLabel='New Activity Set: '\r\n                onAddItem={this.handleAddition}\r\n                onChange={this.handleChange}\r\n                value={this.state.title}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column textAlign='center'>\r\n              <Popup\r\n                trigger={\r\n                  <Input\r\n                    size='large'\r\n                    placeholder='Title'\r\n                    value={this.state.actList}\r\n                    onChange={this.handleInputChange}\r\n                    action\r\n                  >\r\n                    <Popup\r\n                      trigger={\r\n                        <Button\r\n                          negative\r\n                          icon='minus'\r\n                          size='large'\r\n                        />\r\n                      }\r\n                      content={this.handleAntidelete}\r\n                      on='click'\r\n                      position='top center'\r\n                    />\r\n                    <input />\r\n                    <Button\r\n                      color='blue'\r\n                      content='Edit Title'\r\n                      onClick={this.handleEdit}\r\n                      disabled={!this.state.actList}\r\n                    />\r\n                  </Input>\r\n                }\r\n                content={\r\n                  <Message\r\n                    negative\r\n                    content='You cannot name an activity set nothing!'\r\n                  />\r\n                }\r\n                position='top center'\r\n                disabled={!!this.state.actList}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={2}></Grid.Column>\r\n            <Grid.Column\r\n              width={9}\r\n              textAlign='center'\r\n              verticalAlign='bottom'\r\n            >\r\n              <Message\r\n                color='blue'\r\n                header='Activity Name'\r\n                content='Name of your break activity.'\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column\r\n              width={5}\r\n              textAlign='center'\r\n            >\r\n              <Message\r\n                color='red'\r\n                header='Weight'\r\n                content='How much you want to weight an activity to show up. Each unit is like adding another entry into a lottery.'\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          {this.renderActivities()}\r\n          <Grid.Row>\r\n            <Grid.Column\r\n              width={2}\r\n              textAlign='right'\r\n              verticalAlign='middle'\r\n            >\r\n              <Button\r\n                circular\r\n                positive\r\n                icon='plus'\r\n                size='medium'\r\n                onClick={this.handleAdd}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={9}>\r\n              <Input\r\n                size='small'\r\n                placeholder='Name'\r\n                fluid\r\n                value={this.state.tempName}\r\n                onChange={this.handleActChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}