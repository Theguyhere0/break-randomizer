{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Dropdown, Grid, Button, Header } from 'semantic-ui-react';\nlet actSetList = [];\n\nfunction getOptions() {\n  actSetList.length = 0;\n\n  for (const i in window.localStorage) {\n    if (window.localStorage.getItem(i) && i !== window.localStorage.key(0)) {\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\n    }\n  }\n}\n\nexport default class MainMenu extends Component {\n  componentDidMount() {\n    window.addEventListener('load', getOptions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', getOptions);\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(\"h2\", {\n      style: {\n        textAlign: 'right'\n      }\n    }, \"Choose Activity Set\")), __jsx(Grid.Column, {\n      width: 5\n    }, __jsx(Dropdown, {\n      fluid: true,\n      placeholder: \"Activity Set\",\n      search: true,\n      selection: true,\n      options: actSetList\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 10\n    }, __jsx(Header, {\n      size: \"huge\"\n    }, \"My break will now be...\")), __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(Button, {\n      size: \"massive\",\n      primary: true,\n      floated: \"right\",\n      content: \"Break Time!\"\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/main/index.js"],"names":["React","Component","Layout","Dropdown","Grid","Button","Header","actSetList","getOptions","length","i","window","localStorage","getItem","key","push","JSON","parse","MainMenu","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA6C,mBAA7C;AAEA,IAAIC,UAAU,GAAG,EAAjB;;AACA,SAASC,UAAT,GAAsB;AACpBD,EAAAA,UAAU,CAACE,MAAX,GAAoB,CAApB;;AACA,OAAK,MAAMC,CAAX,IAAgBC,MAAM,CAACC,YAAvB,EAAqC;AACnC,QAAID,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,CAA5B,KAAkCA,CAAC,KAAKC,MAAM,CAACC,YAAP,CAAoBE,GAApB,CAAwB,CAAxB,CAA5C,EAAwE;AACtEP,MAAAA,UAAU,CAACQ,IAAX,CAAgBC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,CAA5B,CAAX,CAAhB;AACD;AACF;AACF;;AAGD,eAAe,MAAMQ,QAAN,SAAuBjB,SAAvB,CAAiC;AAC9CkB,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,MAAxB,EAAgCZ,UAAhC;AACD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrBV,IAAAA,MAAM,CAACW,mBAAP,CAA2B,MAA3B,EAAmCd,UAAnC;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX;AAAX,6BADF,CADF,EAIE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAgB,MAAA,WAAW,EAAC,cAA5B;AAA2C,MAAA,MAAM,MAAjD;AAAkD,MAAA,SAAS,MAA3D;AAA4D,MAAA,OAAO,EAAEjB;AAArE,MADF,CAJF,CADF,EASE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,iCADF,CADF,EAIE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,MAA9B;AAA+B,MAAA,OAAO,EAAC,OAAvC;AAA+C,MAAA,OAAO,EAAC;AAAvD,MADF,CAJF,CATF,EAiBE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,OADF,CAjBF,CADF,CADF;AA0BD;;AApC6C","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Dropdown, Grid, Button, Header} from 'semantic-ui-react';\r\n\r\nlet actSetList = [];\r\nfunction getOptions() {\r\n  actSetList.length = 0;\r\n  for (const i in window.localStorage) {\r\n    if (window.localStorage.getItem(i) && i !== window.localStorage.key(0)) {\r\n      actSetList.push(JSON.parse(window.localStorage.getItem(i)));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default class MainMenu extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('load', getOptions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('load', getOptions)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign:'right'}}>Choose Activity Set</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown fluid placeholder='Activity Set' search selection options={actSetList}/>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column width={10}>\r\n              <Header size='huge'>My break will now be...</Header>\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n              <Button size='massive' primary floated='right' content='Break Time!' />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}