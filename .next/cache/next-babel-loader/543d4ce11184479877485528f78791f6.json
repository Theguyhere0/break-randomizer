{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Grid, Dropdown, Input, Button } from 'semantic-ui-react';\nlet actSetList = [{\n  key: 'Activity Set 1',\n  text: 'Activity Set 1',\n  value: 'Activity Set 1'\n}, {\n  key: 'Activity Set 2',\n  text: 'Activity Set 2',\n  value: 'Activity Set 2'\n}];\nexport default class CreateList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      actList: ''\n    });\n\n    _defineProperty(this, \"handleAddition\", (e, {\n      value\n    }) => {\n      actSetList.push({\n        key: value,\n        text: value,\n        value\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", (e, {\n      value\n    }) => this.setState({\n      actList: value\n    }));\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(\"h2\", {\n      style: {\n        textAlign: 'right'\n      }\n    }, \"Saved Activity Sets\")), __jsx(Grid.Column, {\n      width: 5\n    }, __jsx(Dropdown, {\n      placeholder: \"Activity Set\",\n      search: true,\n      selection: true,\n      options: actSetList,\n      allowAdditions: true,\n      additionLabel: \"New Activity Set: \",\n      onAddItem: this.handleAddition,\n      onChange: this.handleChange\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      textAlign: \"center\"\n    }, __jsx(Input, {\n      action: {\n        color: 'blue',\n        content: 'Edit Title',\n        onClick: this.handleChange\n      },\n      size: \"large\",\n      placeholder: \"Title\",\n      defaultValue: this.state.actList\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mxlin/Documents/GitHub/break-randomizer/pages/edit/index.js"],"names":["React","Component","Layout","Grid","Dropdown","Input","Button","actSetList","key","text","value","CreateList","actList","e","push","setState","render","textAlign","handleAddition","handleChange","color","content","onClick","state"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA4C,mBAA5C;AAEA,IAAIC,UAAU,GAAG,CACf;AACEC,EAAAA,GAAG,EAAE,gBADP;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADe,EAMf;AACEF,EAAAA,GAAG,EAAE,gBADP;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CANe,CAAjB;AAaA,eAAe,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCAC1C;AAACW,MAAAA,OAAO,EAAE;AAAV,KAD0C;;AAAA,4CAG/B,CAACC,CAAD,EAAI;AAACH,MAAAA;AAAD,KAAJ,KAAgB;AAC/BH,MAAAA,UAAU,CAACO,IAAX,CAAgB;AAACN,QAAAA,GAAG,EAAEE,KAAN;AAAaD,QAAAA,IAAI,EAAEC,KAAnB;AAA0BA,QAAAA;AAA1B,OAAhB;AACD,KAL+C;;AAAA,0CAMjC,CAACG,CAAD,EAAI;AAACH,MAAAA;AAAD,KAAJ,KAAgB,KAAKK,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAEF;AAAX,KAAd,CANiB;AAAA;;AAQhDM,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ;AAAX,6BADF,CADF,EAIE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,QAAD;AACE,MAAA,WAAW,EAAC,cADd;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,OAAO,EAAEV,UAJX;AAKE,MAAA,cAAc,MALhB;AAME,MAAA,aAAa,EAAC,oBANhB;AAOE,MAAA,SAAS,EAAE,KAAKW,cAPlB;AAQE,MAAA,QAAQ,EAAE,KAAKC;AARjB,MADF,CAJF,CADF,EAkBE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC;AAAvB,OACE,MAAC,KAAD;AACE,MAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,MADD;AAENC,QAAAA,OAAO,EAAE,YAFH;AAGNC,QAAAA,OAAO,EAAE,KAAKH;AAHR,OADV;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,WAAW,EAAC,OAPd;AAQE,MAAA,YAAY,EAAE,KAAKI,KAAL,CAAWX;AAR3B,MADF,CADF,CAlBF,CADF,CADF;AAqCD;;AA9C+C","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Grid, Dropdown, Input, Button} from 'semantic-ui-react';\r\n\r\nlet actSetList = [\r\n  {\r\n    key: 'Activity Set 1',\r\n    text: 'Activity Set 1',\r\n    value: 'Activity Set 1'\r\n  },\r\n  {\r\n    key: 'Activity Set 2',\r\n    text: 'Activity Set 2',\r\n    value: 'Activity Set 2'\r\n  }\r\n];\r\n\r\nexport default class CreateList extends Component {\r\n  state={actList: ''};\r\n\r\n  handleAddition = (e, {value}) => {\r\n    actSetList.push({key: value, text: value, value});\r\n  };\r\n  handleChange = (e, {value}) => this.setState({ actList: value });\r\n\r\n  render() {\r\n    return(\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={8}>\r\n              <h2 style={{textAlign: 'right'}}>Saved Activity Sets</h2>\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Dropdown\r\n                placeholder='Activity Set'\r\n                search\r\n                selection\r\n                options={actSetList}\r\n                allowAdditions\r\n                additionLabel='New Activity Set: '\r\n                onAddItem={this.handleAddition}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column textAlign='center'>\r\n              <Input\r\n                action={{\r\n                  color: 'blue',\r\n                  content: 'Edit Title',\r\n                  onClick: this.handleChange\r\n                }}\r\n                size='large'\r\n                placeholder='Title'\r\n                defaultValue={this.state.actList}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}